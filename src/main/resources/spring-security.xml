<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <http use-expressions="true" >
        <intercept-url pattern="/users**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/users/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/account/**" access="hasAnyRole('ROLE_USER')" />
        <form-login login-page="/login.html" />
        <logout logout-url="/logout"/>
    </http>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="11" />
    </beans:bean>

    <authentication-manager>
        <authentication-provider>

            <password-encoder  ref="encoder" />

            <jdbc-user-service data-source-ref="dataSource"
                               authorities-by-username-query="select user.name, role.name from user
											   join user_role on user.id = user_role.users_id
											   join role on user_role.roles_id = role.id
											   where user.name = ?"
                               users-by-username-query="select name,password,enabled from user where name = ?" />

        </authentication-provider>
    </authentication-manager>
</beans:beans>